{"version":3,"sources":["components/InputElement.jsx","components/PortInfo.jsx","components/Port.jsx","components/Ports.jsx","components/Switch.jsx","components/Switchs.jsx","components/CreatePort.jsx","App.jsx","index.js"],"names":["InputElement","children","configuration","handleChangeInputValue","type","className","required","id","value","onChange","PortInfo","handleDeletePort","handleUpdatePort","params","useParams","navigate","useNavigate","useState","code","switchCode","desc","departId","department","departName","portData","setPortData","departments","setDepartments","useEffect","getData","a","axios","get","portId","data","getDepartments","handleDeleteButtonClick","delete","then","inputPortCode","document","getElementById","inputPortDesc","inputPortDepartment","newData","handleUpdateData","put","to","name","map","onClick","Port","port","readOnly","Ports","ports","SwitchElement","even","odd","sw","filter","SwitchsElements","CreatePort","handleCreatePort","handleCreatePortButtonClick","inputPortSwCode","postData","portDesc","post","htmlFor","App","hackData","setHackData","fetchData","exact","path","element","Switchs","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.797f57e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './InputElement.css'\r\n\r\nconst InputElement = ({children, configuration, handleChangeInputValue, type}) => {\r\n    return ( \r\n        <div className=\"group\">      \r\n            <input type={type} required id={configuration} value={children} onChange={handleChangeInputValue}/>\r\n            <label></label>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default InputElement;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport './PortInfo.css'\r\nimport axios from 'axios';\r\n\r\nimport InputElement from './InputElement';\r\n\r\nconst PortInfo = ({handleDeletePort, handleUpdatePort}) => {\r\n\r\n    const params = useParams()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [portData, setPortData] = useState({\r\n        id: 1,\r\n        code: \"1\",\r\n        switchCode: \"1\",\r\n        desc: \"\",\r\n        departId: 1,\r\n        department: {\r\n            departName: \"Indefinido\",\r\n            id: 1\r\n        }\r\n    })\r\n\r\n    const [departments, setDepartments] = useState([\r\n        {\r\n            id: 1,\r\n            departName: \"Admin\",\r\n        },\r\n        {\r\n            id: 2,\r\n            departName: \"Comercial\"\r\n        }\r\n    ])\r\n\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n          const { data } = await axios.get(`http://localhost:3001/port/${params.portId}`)\r\n          setPortData(data)\r\n\r\n          const getDepartments = async () => {\r\n            const { data } = await axios.get('http://localhost:3001/department')\r\n            setDepartments(data)\r\n          }\r\n      \r\n          getDepartments()\r\n        }\r\n    \r\n        getData()\r\n      }, [])\r\n\r\n        const handleDeleteButtonClick = async() => {\r\n            await axios.delete(`http://localhost:3001/port/${params.portId}`)\r\n\r\n            handleDeletePort().then(navigate(\"/\"))\r\n        }\r\n\r\n        const handleChangeInputValue = () => {\r\n            const inputPortCode = document.getElementById('input-port-code').value\r\n            const inputPortDesc = document.getElementById('input-port-desc').value\r\n            const inputPortDepartment = document.getElementById('department-select').value\r\n            const newData = {...portData, code: inputPortCode, desc: inputPortDesc, departId: inputPortDepartment}\r\n            setPortData(newData)\r\n        }\r\n\r\n        const handleUpdateData = async() => {\r\n            await axios.put(`http://localhost:3001/port/${params.portId}`, portData)\r\n            handleUpdatePort().then(navigate('/'))\r\n        }\r\n            \r\n    return ( \r\n        <div className=\"info-container\">\r\n            <div className=\"title-container\">\r\n                <div>\r\n                    <Link to=\"/\">Voltar</Link>\r\n                </div>\r\n                <div className=\"headers-info\">\r\n                <h1>Porta - </h1>\r\n                    <InputElement handleChangeInputValue={handleChangeInputValue} configuration={\"input-port-code\"} type={\"number\"}>{portData.code}</InputElement>\r\n                    <h1>Switch - {portData.switchCode}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"description\">\r\n                <h3>Descrição</h3>\r\n                <InputElement handleChangeInputValue={handleChangeInputValue} configuration={\"input-port-desc\"} type={\"text\"}>{portData.desc}</InputElement>\r\n\r\n                <select name=\"department-select\" id=\"department-select\" onChange={handleChangeInputValue} className=\"select-port-department\">\r\n                    <option value={portData.departId}>{portData.department.departName}</option>\r\n                    {departments.map((department)=> { \r\n                        if (department.id === portData.departId) {return}\r\n                        return <option value={department.id}>{department.departName}</option>\r\n                    })}\r\n                </select>\r\n\r\n            </div>\r\n            <div className=\"port-control\">\r\n                <button className=\"update-button\" onClick={handleUpdateData}>Atualizar</button>\r\n                <button className=\"delete-button\" onClick={handleDeleteButtonClick}>Apagar</button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PortInfo;","import React from \"react\";\r\nimport './Port.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Port = ({port}) => {\r\n    const navigate = useNavigate()\r\n\r\n    function handlePortClick() {\r\n        navigate(`/port/${port.id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sw-port\">\r\n            <input type=\"text\" value={port.code} className={'port-input'} onClick={handlePortClick} readOnly/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Port","import React from \"react\";\r\nimport './Ports.css'\r\nimport Port from './Port'\r\n\r\nconst Ports = ({ports}) => {\r\n    return (\r\n        <div className=\"ports\">\r\n            {ports.map(port => <Port port={port} key={port.id}/>) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ports","import React from \"react\";\r\nimport Ports from \"./Ports\";\r\nimport './Switch.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SwitchElement = ({sw}) => {\r\n    let even\r\n    let odd\r\n    {odd = sw.Ports.filter(port => port.code % 2 !== 0)}\r\n    {even = sw.Ports.filter(port => port.code % 2 === 0)}\r\n    return (\r\n        <div className=\"switch\">\r\n            <div>\r\n            {<Ports ports={odd}/>}\r\n            {<Ports ports={even}/>}\r\n            </div>\r\n            <div className={\"control\"}>\r\n            <h1>{sw.id}</h1>\r\n            <Link to=\"/port/add\">Cadastrar</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwitchElement;","import React from 'react';\r\nimport SwitchElement from './Switch';\r\n\r\nconst SwitchsElements = ({data}) => {\r\n    return (\r\n        <> \r\n        {data.map(sw => <SwitchElement sw={sw} key={sw.id}/>)}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default SwitchsElements;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './CreatePort.css'\r\n\r\nconst CreatePort = ({handleCreatePort}) => {\r\n\r\n    const [departments, setDepartments] = useState([\r\n        {\r\n            id: 1,\r\n            departName: \"Admin\"\r\n        },\r\n        {\r\n            id: 2,\r\n            departName: \"Comercial\"\r\n        }\r\n    ])\r\n\r\n    useEffect(() => {\r\n        const getDepartments = async () => {\r\n            const { data } = await axios.get('http://localhost:3001/department')\r\n            setDepartments(data)\r\n          }\r\n      \r\n          getDepartments()\r\n    }, [])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleCreatePortButtonClick = async () => {\r\n        const inputPortSwCode = (document.getElementById(\"inputPortSwCode\").value)\r\n        const inputPortCode = (document.getElementById(\"inputPortCode\").value)\r\n        const inputPortDesc = (document.getElementById(\"inputPortDesc\").value)\r\n        const inputPortDepartment = (document.getElementById(\"department-select\").value)\r\n        const postData = { code: inputPortCode, switchCode: inputPortSwCode, portDesc: inputPortDesc, departId: inputPortDepartment}\r\n        await axios.post('http://localhost:3001/port/add', postData)\r\n        handleCreatePort().then(navigate(\"/\"))\r\n    }\r\n\r\n    return ( \r\n\r\n        <div className=\"add-container\">\r\n\r\n            <div>\r\n                <Link to=\"/\">Voltar</Link>\r\n                <h1>Adicionar porta</h1>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <label htmlFor=\"inputPortSwCode\" >Número do Switch</label>\r\n                <input type=\"text\" id=\"inputPortSwCode\" name=\"inputPortSwCode\" required/>\r\n                <label htmlFor=\"inputPortCode\">Número da porta</label>\r\n                <input type=\"text\" id=\"inputPortCode\" name=\"department-select\" required/>\r\n                <label htmlFor=\"department-select\">Departamento</label>\r\n\r\n\r\n\r\n                <select name=\"department-select\" id=\"department-select\">\r\n\r\n                {departments.map((department)=> {\r\n                    return <option value={department.id}>{department.departName}</option>\r\n                })}\r\n\r\n                </select>\r\n\r\n\r\n\r\n                <label htmlFor=\"inputPortDesc\">Descrição</label>\r\n                <input type=\"text\" id=\"inputPortDesc\" name=\"inputPortDesc\" required/>\r\n                <button onClick={handleCreatePortButtonClick}>Cadastrar</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreatePort;","import React, { useEffect, useState } from \"react\";\r\nimport PortInfo from \"./components/PortInfo\";\r\nimport axios from \"axios\";\r\nimport SwitchsElements from \"./components/Switchs\";\r\nimport './App.css'\r\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport CreatePort from \"./components/CreatePort\";\r\n\r\nconst App = () => {\r\n\r\n  const [hackData, setHackData] = useState([\r\n    {\r\n      id: 1,\r\n      Ports: [\r\n        {\r\n          code: \"1\",\r\n          desc: 'lorenipsun'\r\n        },\r\n        {\r\n          code: \"2\",\r\n          desc: 'loreion'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      Ports: [\r\n        {\r\n          code: \"1\",\r\n          desc: \"loren\"\r\n        },\r\n        {\r\n          code: \"2\",\r\n          desc: \"loren2\"\r\n        }\r\n      ]\r\n    }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios.get('http://localhost:3001')\r\n      setHackData(data)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n\r\n  const handleDeletePort = async () => {\r\n    const newData = await (await axios.get('http://localhost:3001/')).data\r\n    setHackData(newData)\r\n    return (\"Deleted\")\r\n  }\r\n\r\n  const handleCreatePort = async () => {\r\n    const newData = await (await axios.get('http://localhost:3001/')).data\r\n    setHackData(newData)\r\n    return (\"Created\")\r\n}\r\n\r\n  const handleUpdatePort = async () => {\r\n    const newData = await (await axios.get('http://localhost:3001/')).data\r\n    setHackData(newData)\r\n    return(\"Updated\")\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"hack\">\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<SwitchsElements data={hackData}/>}/>\r\n          <Route path=\"port/:portId\" element={<PortInfo handleDeletePort={handleDeletePort} handleUpdatePort={handleUpdatePort}/>} />\r\n          <Route path=\"port/add/\" element={<CreatePort handleCreatePort={handleCreatePort}/>}/>\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}